@page "/account/login"
@attribute [AllowAnonymous]
@inject NavigationManager Navigation

@* Projeto Smoke Express - Autores: Bruno Bueno e Matheus Esposto *@

<h3 class="mb-4">Entrar na Smoke Express</h3>

<p class="text-muted">Acesso seguro com cookies HttpOnly e gerenciamento centralizado no servidor.</p>

@if (!string.IsNullOrEmpty(MensagemErro))
{
    <div class="alert alert-danger" role="alert">@MensagemErro</div>
}

<form method="post" action="/account/login" class="needs-validation" novalidate>
    <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
    <input type="hidden" name="RememberMe" value="false" />

    <div class="mb-3">
        <label class="form-label" for="email">E-mail</label>
        <input id="email" name="Email" type="email" class="form-control" @bind="Email" required />
        <div class="invalid-feedback">Informe um e-mail válido.</div>
    </div>

    <div class="mb-3">
        <label class="form-label" for="senha">Senha</label>
        <input id="senha" name="Password" type="password" class="form-control" required />
        <div class="invalid-feedback">Informe a senha.</div>
    </div>

    <div class="form-check mb-3">
        <input id="lembrar" name="RememberMe" value="true" class="form-check-input" type="checkbox" @bind="RememberMe" />
        <label class="form-check-label" for="lembrar">Manter-me conectado</label>
    </div>

    <button type="submit" class="btn btn-primary">Entrar</button>

    <p class="mt-3">
        Ainda não possui conta? <a href="/account/register">Cadastre-se</a>
    </p>
</form>

@code {
    [SupplyParameterFromQuery(Name = "returnUrl")]
    public string? ReturnUrlQuery { get; set; }
        = "/";

    [SupplyParameterFromQuery(Name = "error")]
    public string? ErrorCode { get; set; }
        = null;

    private string Email { get; set; } = string.Empty;

    private bool RememberMe { get; set; }
        = false;

    private string ReturnUrl => string.IsNullOrWhiteSpace(ReturnUrlQuery) ? "/" : ReturnUrlQuery;

    private string? MensagemErro => ErrorCode switch
    {
        "locked" => "Conta temporariamente bloqueada por tentativas inválidas. Tente novamente mais tarde.",
        "invalid" => "Credenciais inválidas. Verifique o e-mail e a senha informados.",
        _ => null
    };
}

